{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suman\\\\Dropbox\\\\PC\\\\Desktop\\\\hyf-homework\\\\react\\\\react1\\\\week2\\\\react1week2homework2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Counter } from './components/Counter'; // import RandomTodos from './components/RandomTodos';\n\nimport { todoArray, newTodos } from './components/TodoData';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodosMethods() {\n  _s();\n\n  const [usetodo, setUsetodo] = useState(todoArray); //todoList\n\n  const TodoList = usetodo.map(todos => /*#__PURE__*/_jsxDEV(TodoItem, {\n    text: todos.description,\n    checked: todos.checked,\n    id: todos.id\n  }, todos.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this));\n  console.log(TodoList);\n\n  if (TodoList.length === 0) {\n    return 'no no';\n  } //todoItem\n\n\n  function TodoItem(_ref) {\n    let {\n      text,\n      checked,\n      id\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: checked ? 'checked' : 'unchecked',\n        children: [\" \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: 'checkbox',\n        value: checked,\n        onChange: () => decorateToDo(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteToDo(id),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  } //add RandomTODO\n\n\n  function addRandomTodo() {\n    let randomID;\n\n    if (usetodo.length === 0) {\n      randomID = 1;\n    } else {\n      randomID = usetodo[usetodo.length - 1].id + 1;\n    }\n\n    const randomTodo = {\n      id: randomID,\n      ...newTodos[Math.floor(Math.random() * newTodos.length)]\n    };\n    return setUsetodo(todosList => [...todosList, randomTodo]);\n  } //deleteTODO\n\n\n  function deleteToDo(id) {\n    setUsetodo(prevTodos => {\n      const del = prevTodos.filter(todo => todo.id !== id);\n      return del;\n    });\n  } //strike ThroughTODO\n\n\n  function decorateToDo(id) {\n    var strikeThroughList = [...usetodo];\n    strikeThroughList.forEach(item => {\n      if (item.id === id) {\n        item.checked = !item.checked;\n      }\n    });\n    setUsetodo(strikeThroughList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRandomTodo,\n      children: \" add todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), TodoList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodosMethods, \"6Z7Dl651NKjrZjLyfv7SUtAd+XM=\");\n\n_c = TodosMethods;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodosMethods, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodosMethods\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/Suman/Dropbox/PC/Desktop/hyf-homework/react/react1/week2/react1week2homework2/src/App.js"],"names":["Counter","todoArray","newTodos","React","useState","TodosMethods","usetodo","setUsetodo","TodoList","map","todos","description","checked","id","console","log","length","TodoItem","text","decorateToDo","deleteToDo","addRandomTodo","randomID","randomTodo","Math","floor","random","todosList","prevTodos","del","filter","todo","strikeThroughList","forEach","item","App"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Counter } from './components/Counter';\n// import RandomTodos from './components/RandomTodos';\nimport { todoArray, newTodos } from './components/TodoData';\nimport React, { useState } from 'react';\n\nfunction TodosMethods() {\n  const [usetodo, setUsetodo] = useState(todoArray);\n\n  //todoList\n  const TodoList = usetodo.map((todos) => (\n    <TodoItem\n      text={todos.description}\n      checked={todos.checked}\n      id={todos.id}\n      key={todos.id}\n    />\n  ));\n  console.log(TodoList);\n  if (TodoList.length === 0) {\n    return 'no no';\n  }\n  //todoItem\n  function TodoItem({ text, checked, id }) {\n    return (\n      <li>\n        <span className={checked ? 'checked' : 'unchecked'}> {text}</span>\n        <input\n          type={'checkbox'}\n          value={checked}\n          onChange={() => decorateToDo(id)}\n        ></input>\n\n        <button onClick={() => deleteToDo(id)}>delete</button>\n      </li>\n    );\n  }\n\n  //add RandomTODO\n  function addRandomTodo() {\n    let randomID;\n    if (usetodo.length === 0) {\n      randomID = 1;\n    } else {\n      randomID = usetodo[usetodo.length - 1].id + 1;\n    }\n    const randomTodo = {\n      id: randomID,\n      ...newTodos[Math.floor(Math.random() * newTodos.length)],\n    };\n    return setUsetodo((todosList) => [...todosList, randomTodo]);\n  }\n\n  //deleteTODO\n  function deleteToDo(id) {\n    setUsetodo((prevTodos) => {\n      const del = prevTodos.filter((todo) => todo.id !== id);\n\n      return del;\n    });\n  }\n\n  //strike ThroughTODO\n  function decorateToDo(id) {\n    var strikeThroughList = [...usetodo];\n    strikeThroughList.forEach((item) => {\n      if (item.id === id) {\n        item.checked = !item.checked;\n      }\n    });\n    setUsetodo(strikeThroughList);\n  }\n\n  return (\n    <div>\n      <button onClick={addRandomTodo}> add todo </button>\n      {TodoList}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter />\n      <h1>ToDo List</h1>\n      <TodosMethods />\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}