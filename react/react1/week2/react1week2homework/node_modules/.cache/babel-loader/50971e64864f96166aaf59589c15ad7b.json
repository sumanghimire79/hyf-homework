{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suman\\\\Dropbox\\\\PC\\\\Desktop\\\\hyf-homework\\\\react\\\\react1\\\\week2\\\\react1week2homework\\\\src\\\\components\\\\TodosMethods.js\",\n    _s = $RefreshSig$();\n\nimport { TodosArray, NewTodosArray } from './TodoData';\nimport React, { useState } from 'react';\nimport { TodoItem } from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodosMethods() {\n  _s();\n\n  const [todos, setTodos] = useState(TodosArray); //TodoList\n\n  const TodoList = todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n    description: todo.description,\n    checked: todo.checked,\n    id: todo.id,\n    MarkTodo: MarkTodo\n  }, todo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n  console.log(TodoList); //add a randomTodo\n\n  function AddRandomTodo() {\n    let randomID;\n\n    if (todos.length === 0) {\n      randomID = 1;\n    } else {\n      randomID = todos[todos.length - 1].id + 1;\n    }\n\n    const randomTodo = {\n      id: randomID,\n      ...NewTodosArray[Math.floor(Math.random() * NewTodosArray.length)]\n    };\n    const AddedListWithRandomTodo = setTodos(todosList => [...todosList, randomTodo]);\n    return AddedListWithRandomTodo;\n  } //Delete a Todo\n\n\n  function DeleteTodo(id) {\n    setTodos(prevTodos => {\n      const ListAfterDelete = prevTodos.filter(todo => todo.id !== id);\n      console.log(ListAfterDelete);\n      return ListAfterDelete;\n    });\n  } //Strike through todos\n\n\n  function MarkTodo(id) {\n    var strikeThroughList = [...todos];\n    strikeThroughList.forEach(item => {\n      if (item.id === id) {\n        item.checked = !item.checked;\n      }\n    });\n    setTodos(strikeThroughList);\n  }\n\n  return todos && todos.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddRandomTodo,\n      children: \" Add Todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), TodoList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddRandomTodo,\n      children: \" Add Todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" No item left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodosMethods, \"xv3JvosjEVxSPDcHCqA3tSJDtw0=\");\n\n_c = TodosMethods;\nexport default TodosMethods;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosMethods\");","map":{"version":3,"sources":["C:/Users/Suman/Dropbox/PC/Desktop/hyf-homework/react/react1/week2/react1week2homework/src/components/TodosMethods.js"],"names":["TodosArray","NewTodosArray","React","useState","TodoItem","TodosMethods","todos","setTodos","TodoList","map","todo","description","checked","id","MarkTodo","console","log","AddRandomTodo","randomID","length","randomTodo","Math","floor","random","AddedListWithRandomTodo","todosList","DeleteTodo","prevTodos","ListAfterDelete","filter","strikeThroughList","forEach","item"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,YAA1C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACH,UAAD,CAAlC,CADsB,CAGtB;;AACA,QAAMQ,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACzB,QAAC,QAAD;AACE,IAAA,WAAW,EAAEA,IAAI,CAACC,WADpB;AAEE,IAAA,OAAO,EAAED,IAAI,CAACE,OAFhB;AAGE,IAAA,EAAE,EAAEF,IAAI,CAACG,EAHX;AAKE,IAAA,QAAQ,EAAEC;AALZ,KAIOJ,IAAI,CAACG,EAJZ;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;AASAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAbsB,CAetB;;AACA,WAASS,aAAT,GAAyB;AACvB,QAAIC,QAAJ;;AACA,QAAIZ,KAAK,CAACa,MAAN,KAAiB,CAArB,EAAwB;AACtBD,MAAAA,QAAQ,GAAG,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,GAAGZ,KAAK,CAACA,KAAK,CAACa,MAAN,GAAe,CAAhB,CAAL,CAAwBN,EAAxB,GAA6B,CAAxC;AACD;;AACD,UAAMO,UAAU,GAAG;AACjBP,MAAAA,EAAE,EAAEK,QADa;AAEjB,SAAGjB,aAAa,CAACoB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBtB,aAAa,CAACkB,MAAzC,CAAD;AAFC,KAAnB;AAIA,UAAMK,uBAAuB,GAAGjB,QAAQ,CAAEkB,SAAD,IAAe,CACtD,GAAGA,SADmD,EAEtDL,UAFsD,CAAhB,CAAxC;AAIA,WAAOI,uBAAP;AACD,GAhCqB,CAkCtB;;;AACA,WAASE,UAAT,CAAoBb,EAApB,EAAwB;AACtBN,IAAAA,QAAQ,CAAEoB,SAAD,IAAe;AACtB,YAAMC,eAAe,GAAGD,SAAS,CAACE,MAAV,CAAkBnB,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYA,EAAvC,CAAxB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYY,eAAZ;AACA,aAAOA,eAAP;AACD,KAJO,CAAR;AAKD,GAzCqB,CA2CtB;;;AACA,WAASd,QAAT,CAAkBD,EAAlB,EAAsB;AACpB,QAAIiB,iBAAiB,GAAG,CAAC,GAAGxB,KAAJ,CAAxB;AACAwB,IAAAA,iBAAiB,CAACC,OAAlB,CAA2BC,IAAD,IAAU;AAClC,UAAIA,IAAI,CAACnB,EAAL,KAAYA,EAAhB,EAAoB;AAClBmB,QAAAA,IAAI,CAACpB,OAAL,GAAe,CAACoB,IAAI,CAACpB,OAArB;AACD;AACF,KAJD;AAKAL,IAAAA,QAAQ,CAACuB,iBAAD,CAAR;AACD;;AAED,SAAOxB,KAAK,IAAIA,KAAK,CAACa,MAAN,GAAe,CAAxB,gBACL;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEF,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGT,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAML;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAES,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UANF;AAWD;;GAjEQZ,Y;;KAAAA,Y;AAmET,eAAeA,YAAf","sourcesContent":["import { TodosArray, NewTodosArray } from './TodoData';\r\nimport React, { useState } from 'react';\r\nimport { TodoItem } from './TodoItem';\r\n\r\nfunction TodosMethods() {\r\n  const [todos, setTodos] = useState(TodosArray);\r\n\r\n  //TodoList\r\n  const TodoList = todos.map((todo) => (\r\n    <TodoItem\r\n      description={todo.description}\r\n      checked={todo.checked}\r\n      id={todo.id}\r\n      key={todo.id}\r\n      MarkTodo={MarkTodo}\r\n    />\r\n  ));\r\n  console.log(TodoList);\r\n\r\n  //add a randomTodo\r\n  function AddRandomTodo() {\r\n    let randomID;\r\n    if (todos.length === 0) {\r\n      randomID = 1;\r\n    } else {\r\n      randomID = todos[todos.length - 1].id + 1;\r\n    }\r\n    const randomTodo = {\r\n      id: randomID,\r\n      ...NewTodosArray[Math.floor(Math.random() * NewTodosArray.length)],\r\n    };\r\n    const AddedListWithRandomTodo = setTodos((todosList) => [\r\n      ...todosList,\r\n      randomTodo,\r\n    ]);\r\n    return AddedListWithRandomTodo;\r\n  }\r\n\r\n  //Delete a Todo\r\n  function DeleteTodo(id) {\r\n    setTodos((prevTodos) => {\r\n      const ListAfterDelete = prevTodos.filter((todo) => todo.id !== id);\r\n      console.log(ListAfterDelete);\r\n      return ListAfterDelete;\r\n    });\r\n  }\r\n\r\n  //Strike through todos\r\n  function MarkTodo(id) {\r\n    var strikeThroughList = [...todos];\r\n    strikeThroughList.forEach((item) => {\r\n      if (item.id === id) {\r\n        item.checked = !item.checked;\r\n      }\r\n    });\r\n    setTodos(strikeThroughList);\r\n  }\r\n\r\n  return todos && todos.length > 0 ? (\r\n    <div className=\"TodoList\">\r\n      <button onClick={AddRandomTodo}> Add Todo </button>\r\n      {TodoList}\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <button onClick={AddRandomTodo}> Add Todo </button>\r\n      <span> No item left</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodosMethods;\r\n"]},"metadata":{},"sourceType":"module"}