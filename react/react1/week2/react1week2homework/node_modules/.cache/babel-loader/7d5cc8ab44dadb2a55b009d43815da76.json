{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { NewTodosArray, TodosArray } from './TodoData';\n\nfunction AddRandomTodo() {\n  _s();\n\n  const [useTodo, setUseTodo] = useState(TodosArray);\n  let randomID;\n\n  if (useTodo.length === 0) {\n    randomID = 1;\n  } else {\n    randomID = useTodo[useTodo.length - 1].id + 1;\n  }\n\n  const randomTodo = {\n    id: randomID,\n    ...NewTodosArray[Math.floor(Math.random() * NewTodosArray.length)]\n  };\n  const AddedListWithRandomTodo = setUseTodo(todosList => [...todosList, randomTodo]);\n  return AddedListWithRandomTodo;\n}\n\n_s(AddRandomTodo, \"7/BOx0qZ47q7AD/muIOVooqwQck=\");\n\n_c = AddRandomTodo;\nexport default AddRandomTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRandomTodo\");","map":{"version":3,"sources":["C:/Users/Suman/Dropbox/PC/Desktop/hyf-homework/react/react1/week2/react1week2homework2/src/components/AddRandomTodo.js"],"names":["useState","NewTodosArray","TodosArray","AddRandomTodo","useTodo","setUseTodo","randomID","length","id","randomTodo","Math","floor","random","AddedListWithRandomTodo","todosList"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,YAA1C;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACE,UAAD,CAAtC;AACA,MAAII,QAAJ;;AACA,MAAIF,OAAO,CAACG,MAAR,KAAmB,CAAvB,EAA0B;AACxBD,IAAAA,QAAQ,GAAG,CAAX;AACD,GAFD,MAEO;AACLA,IAAAA,QAAQ,GAAGF,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAAP,CAA4BC,EAA5B,GAAiC,CAA5C;AACD;;AACD,QAAMC,UAAU,GAAG;AACjBD,IAAAA,EAAE,EAAEF,QADa;AAEjB,OAAGL,aAAa,CAACS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,aAAa,CAACM,MAAzC,CAAD;AAFC,GAAnB;AAIA,QAAMM,uBAAuB,GAAGR,UAAU,CAAES,SAAD,IAAe,CACxD,GAAGA,SADqD,EAExDL,UAFwD,CAAhB,CAA1C;AAIA,SAAOI,uBAAP;AACD;;GAjBQV,a;;KAAAA,a;AAkBT,eAAeA,aAAf","sourcesContent":["import { useState } from 'react';\r\nimport { NewTodosArray, TodosArray } from './TodoData';\r\nfunction AddRandomTodo() {\r\n  const [useTodo, setUseTodo] = useState(TodosArray);\r\n  let randomID;\r\n  if (useTodo.length === 0) {\r\n    randomID = 1;\r\n  } else {\r\n    randomID = useTodo[useTodo.length - 1].id + 1;\r\n  }\r\n  const randomTodo = {\r\n    id: randomID,\r\n    ...NewTodosArray[Math.floor(Math.random() * NewTodosArray.length)],\r\n  };\r\n  const AddedListWithRandomTodo = setUseTodo((todosList) => [\r\n    ...todosList,\r\n    randomTodo,\r\n  ]);\r\n  return AddedListWithRandomTodo;\r\n}\r\nexport default AddRandomTodo;\r\n"]},"metadata":{},"sourceType":"module"}