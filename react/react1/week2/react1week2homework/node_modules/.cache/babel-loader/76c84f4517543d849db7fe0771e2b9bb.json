{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suman\\\\Dropbox\\\\PC\\\\Desktop\\\\hyf-homework\\\\react\\\\react1\\\\week2\\\\react1week2homework2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todos = [{\n  id: 1,\n  description: 'Get out of bed'\n}, {\n  id: 2,\n  description: 'Brush teeth'\n}, {\n  id: 3,\n  description: 'Eat breakfast'\n}];\nconst newArray = [{\n  description: 'got to bed'\n}, {\n  description: 'dream well'\n}, {\n  description: 'explain the dream in the morning'\n}];\n\nfunction RandomTodos() {\n  _s();\n\n  const [usetodo, setUsetodo] = useState(todos);\n  console.log(usetodo);\n\n  function addRandomTodo() {\n    const randomIndex = Math.floor(Math.random() * newArray.length);\n    let randomID = usetodo[usetodo.length - 1].id + 1;\n    const randomTodo = {\n      id: randomID,\n      ...newArray[randomIndex]\n    };\n    console.log(randomTodo);\n    return setUsetodo(todosList => [...todosList, randomTodo]);\n  }\n\n  const showtodo = usetodo.map(todos => /*#__PURE__*/_jsxDEV(TodoItem, {\n    text: todos.description\n  }, todos.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n\n  function TodoItem(_ref) {\n    let {\n      text\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showtodo, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRandomTodo,\n      children: \" add todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RandomTodos, \"NLCUhsxbHrvqtxlEdr/8QFTu0zk=\");\n\n_c = RandomTodos;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RandomTodos, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RandomTodos\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/Suman/Dropbox/PC/Desktop/hyf-homework/react/react1/week2/react1week2homework2/src/App.js"],"names":["logo","React","useState","todos","id","description","newArray","RandomTodos","usetodo","setUsetodo","console","log","addRandomTodo","randomIndex","Math","floor","random","length","randomID","randomTodo","todosList","showtodo","map","TodoItem","text","App"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,WAAW,EAAE;AAFf,CADY,EAKZ;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,WAAW,EAAE;AAFf,CALY,EASZ;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,WAAW,EAAE;AAFf,CATY,CAAd;AAeA,MAAMC,QAAQ,GAAG,CACf;AACED,EAAAA,WAAW,EAAE;AADf,CADe,EAIf;AACEA,EAAAA,WAAW,EAAE;AADf,CAJe,EAOf;AACEA,EAAAA,WAAW,EAAE;AADf,CAPe,CAAjB;;AAWA,SAASE,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACC,KAAD,CAAtC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AAEA,WAASI,aAAT,GAAyB;AACvB,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBV,QAAQ,CAACW,MAApC,CAApB;AACA,QAAIC,QAAQ,GAAGV,OAAO,CAACA,OAAO,CAACS,MAAR,GAAiB,CAAlB,CAAP,CAA4Bb,EAA5B,GAAiC,CAAhD;AACA,UAAMe,UAAU,GAAG;AAAEf,MAAAA,EAAE,EAAEc,QAAN;AAAgB,SAAGZ,QAAQ,CAACO,WAAD;AAA3B,KAAnB;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAZ;AACA,WAAOV,UAAU,CAAEW,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeD,UAAf,CAAhB,CAAjB;AACD;;AAED,QAAME,QAAQ,GAAGb,OAAO,CAACc,GAAR,CAAanB,KAAD,iBAC3B,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,KAAK,CAACE;AAAtB,KAAwCF,KAAK,CAACC,EAA9C;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;;AAGA,WAASmB,QAAT,OAA4B;AAAA,QAAV;AAAEC,MAAAA;AAAF,KAAU;AAC1B,wBAAO;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,eACGH,QADH,eAEE;AAAQ,MAAA,OAAO,EAAET,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA1BQL,W;;KAAAA,W;;AA4BT,SAASkB,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQA,G;AAST,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useState } from 'react';\nconst todos = [\n  {\n    id: 1,\n    description: 'Get out of bed',\n  },\n  {\n    id: 2,\n    description: 'Brush teeth',\n  },\n  {\n    id: 3,\n    description: 'Eat breakfast',\n  },\n];\n\nconst newArray = [\n  {\n    description: 'got to bed',\n  },\n  {\n    description: 'dream well',\n  },\n  {\n    description: 'explain the dream in the morning',\n  },\n];\nfunction RandomTodos() {\n  const [usetodo, setUsetodo] = useState(todos);\n  console.log(usetodo);\n\n  function addRandomTodo() {\n    const randomIndex = Math.floor(Math.random() * newArray.length);\n    let randomID = usetodo[usetodo.length - 1].id + 1;\n    const randomTodo = { id: randomID, ...newArray[randomIndex] };\n\n    console.log(randomTodo);\n    return setUsetodo((todosList) => [...todosList, randomTodo]);\n  }\n\n  const showtodo = usetodo.map((todos) => (\n    <TodoItem text={todos.description} key={todos.id}></TodoItem>\n  ));\n  function TodoItem({ text }) {\n    return <li>{text}</li>;\n  }\n\n  return (\n    <div>\n      {showtodo}\n      <button onClick={addRandomTodo}> add todo </button>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>hello hello</h1>\n      <RandomTodos />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}