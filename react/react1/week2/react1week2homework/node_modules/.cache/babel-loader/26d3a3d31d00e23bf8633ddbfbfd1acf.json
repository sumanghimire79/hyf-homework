{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suman\\\\Dropbox\\\\PC\\\\Desktop\\\\hyf-homework\\\\react\\\\react1\\\\week2\\\\react1week2homework2\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport { todos, newTodos } from './todoData';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddRandomTodos() {\n  _s();\n\n  const [usetodos, setUsetodo] = useState(todos);\n  const randomIndex = Math.floor(Math.random() * newTodos.length);\n  let randomID = usetodos[usetodos.length - 1].id + 1;\n  const randomTodo = {\n    id: randomID,\n    ...newTodos[randomIndex]\n  };\n  const updatedTodo = setUsetodo(todosList => [...todosList, randomTodo]);\n  return updatedTodo;\n}\n\n_s(AddRandomTodos, \"/XG18gxbtdpLI31O4+eS7PaKYek=\");\n\n_c = AddRandomTodos;\n\nfunction TodoList() {\n  _s2();\n\n  const [usetodos, setUsetodo] = useState(todos);\n  return usetodos.map(todo => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(TodoItem, {\n          text: todo.description,\n          id: todo.id\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  });\n}\n\n_s2(TodoList, \"/XG18gxbtdpLI31O4+eS7PaKYek=\");\n\n_c2 = TodoList;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [updatedTodo, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddRandomTodos,\n      children: \" add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AddRandomTodos\");\n$RefreshReg$(_c2, \"TodoList\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/Suman/Dropbox/PC/Desktop/hyf-homework/react/react1/week2/react1week2homework2/src/App.js"],"names":["todos","newTodos","useState","AddRandomTodos","usetodos","setUsetodo","randomIndex","Math","floor","random","length","randomID","id","randomTodo","updatedTodo","todosList","TodoList","map","todo","description","App"],"mappings":";;;;AAAA,OAAO,WAAP;AACA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,YAAhC;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBH,QAAQ,CAACF,KAAD,CAAvC;AAEA,QAAMM,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBR,QAAQ,CAACS,MAApC,CAApB;AACA,MAAIC,QAAQ,GAAGP,QAAQ,CAACA,QAAQ,CAACM,MAAT,GAAkB,CAAnB,CAAR,CAA8BE,EAA9B,GAAmC,CAAlD;AACA,QAAMC,UAAU,GAAG;AAAED,IAAAA,EAAE,EAAED,QAAN;AAAgB,OAAGV,QAAQ,CAACK,WAAD;AAA3B,GAAnB;AACA,QAAMQ,WAAW,GAAGT,UAAU,CAAEU,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeF,UAAf,CAAhB,CAA9B;AACA,SAAOC,WAAP;AACD;;GARQX,c;;KAAAA,c;;AAUT,SAASa,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACZ,QAAD,EAAWC,UAAX,IAAyBH,QAAQ,CAACF,KAAD,CAAvC;AACA,SAAOI,QAAQ,CAACa,GAAT,CAAcC,IAAD,IAAU;AAC5B,wBACE;AAAA,6BACE;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAEA,IAAI,CAACC,WADb;AAEE,UAAA,EAAE,EAAED,IAAI,CAACN;AAFX,WAGOM,IAAI,CAACN,EAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZM,CAAP;AAaD;;IAfQI,Q;;MAAAA,Q;;AAiBT,SAASI,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGN,WADH,eAEE;AAAQ,MAAA,OAAO,EAAEX,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQiB,G;AAST,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { todos, newTodos } from './todoData';\nimport { useState } from 'react';\n\nfunction AddRandomTodos() {\n  const [usetodos, setUsetodo] = useState(todos);\n\n  const randomIndex = Math.floor(Math.random() * newTodos.length);\n  let randomID = usetodos[usetodos.length - 1].id + 1;\n  const randomTodo = { id: randomID, ...newTodos[randomIndex] };\n  const updatedTodo = setUsetodo((todosList) => [...todosList, randomTodo]);\n  return updatedTodo;\n}\n\nfunction TodoList() {\n  const [usetodos, setUsetodo] = useState(todos);\n  return usetodos.map((todo) => {\n    return (\n      <div>\n        <ul>\n          <TodoItem\n            text={todo.description}\n            id={todo.id}\n            key={todo.id}\n          ></TodoItem>\n        </ul>\n      </div>\n    );\n  });\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {updatedTodo}\n      <button onClick={AddRandomTodos}> add todo</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}